// Единые стили для notched-outline
// Используется в текстовых полях и селектах
// Единый подход: box-shadow + grid layout

// Базовые стили для всех notched-outline
.notched-outline {
  position: absolute;
  inset: 0;
  z-index: 1;
  width: 100%;
  height: 100%;
  max-width: 100%;
  text-align: left;
  pointer-events: none;
  margin: auto;

  &__leading {
    width: 12px;
    height: 100%;
    pointer-events: none;
    box-sizing: border-box;
  }

  &__notch {
    width: auto;
    height: 100%;
    pointer-events: none;
    box-sizing: border-box;
  }

  &__trailing {
    height: 100%;
    pointer-events: none;
    box-sizing: border-box;
  }
}

// Flex layout для текстовых полей
.text-field-container .notched-outline {
  display: flex;

  &__notch {
    flex: 0 0 auto;
  }

  &__trailing {
    flex-grow: 1;
  }
}

// Grid layout для селектов
.select-option .notched-outline {
  display: grid;
  grid-template: 1fr / 12px auto 1fr;
  gap: 0;
}

// Единые стили для всех компонентов с box-shadow
.notched-outline {
  &__leading {
    box-shadow:
      inset 0 var(--notch-outline-width, 1px) 0 0 var(--notch-outline-color, DarkGray),
      inset var(--notch-outline-width, 1px) 0 0 0 var(--notch-outline-color, DarkGray),
      inset 0 calc(var(--notch-outline-width, 1px) * -1) 0 0 var(--notch-outline-color, DarkGray);
    border-radius: var(--notch-border-radius, 6px) 0 0 var(--notch-border-radius, 6px);
    transform: translate3d(0, 0, 0);
    transition: box-shadow 225ms var(--notch-transition-easing, cubic-bezier(0, 0.202, 0.204, 1));
  }

  &__notch {
    box-shadow:
      inset 0 var(--notch-outline-width, 1px) 0 0 var(--notch-outline-color, DarkGray),
      inset 0 calc(var(--notch-outline-width, 1px) * -1) 0 0 var(--notch-outline-color, DarkGray);
    transition: box-shadow 225ms var(--notch-transition-easing, cubic-bezier(0, 0.202, 0.204, 1));

    .input--focused &,
    .input--filled &,
    .textarea--focused &,
    .textarea--filled & {
      box-shadow: inset 0 calc(var(--notch-outline-width, 1px) * -1) 0 0 var(--notch-outline-color, DarkGray);
    }
  }

  &__trailing {
    box-shadow:
      inset 0 var(--notch-outline-width, 1px) 0 0 var(--notch-outline-color, DarkGray),
      inset calc(var(--notch-outline-width, 1px) * -1) 0 0 0 var(--notch-outline-color, DarkGray),
      inset 0 calc(var(--notch-outline-width, 1px) * -1) 0 0 var(--notch-outline-color, DarkGray);
    border-radius: 0 var(--notch-border-radius, 6px) var(--notch-border-radius, 6px) 0;
    transform: translate3d(0, 0, 0);
    transition: box-shadow 225ms var(--notch-transition-easing, cubic-bezier(0, 0.202, 0.204, 1));
  }
}

// Специфичные стили для текстовых полей
.text-field-container {
  --notch-outline-width: var(--tf-border-width-inactive, 1px);
  --notch-outline-color: var(--form-color-outline);
  --notch-border-radius: var(--tf-border-radius, 6px);
  --notch-transition-easing: var(--tf-transition-easing, cubic-bezier(0, 0.202, 0.204, 1));

  &:hover {
    --notch-outline-color: var(--form-color-outline-hover);
  }

  .input--focused &,
  .textarea--focused & {
    --notch-outline-width: var(--tf-border-width-active, 2px);
    --notch-outline-color: var(--form-color-outline-opened);
  }

  .input--filled &,
  .textarea--filled & {
    --notch-outline-width: var(--tf-border-width-active, 2px);
    --notch-outline-color: var(--form-color-activated);
  }

  .input--error &,
  .textarea--error & {
    --notch-outline-color: var(--form-color-error);
  }

  .input--disabled &,
  .textarea--disabled & {
    --notch-outline-color: var(--form-color-disabled);
  }
}

// Специфичные стили для селектов
.select-option {
  --notch-outline-width: var(--so-width-outline, 1px);
  --notch-outline-color: var(--form-color-outline);
  --notch-border-radius: var(--so-border-radius-select, 5.5px);
  --notch-transition-easing: cubic-bezier(0, 0.202, 0.204, 1);

  &--labeled {
    &.select-option--opened .notched-outline__notch,
    &.select-option--selected .notched-outline__notch {
      box-shadow: inset 0 calc(var(--notch-outline-width) * -1) 0 0 var(--notch-outline-color);
    }
  }

  &--unlabeled {
    box-shadow: inset 0 0 0 var(--notch-outline-width) var(--notch-outline-color);
    border-radius: var(--notch-border-radius);
    transform: translate3d(0, 0, 0);
  }

  &:not(&--opened):hover {
    --notch-outline-color: var(--form-color-outline-hover);

    &.select-option--mobile {
      --notch-outline-color: var(--form-color-outline-opened);
      --notch-outline-width: 2px;
    }
  }

  &--opened {
    --notch-outline-color: var(--form-color-outline-opened);
    --notch-outline-width: 2px;
  }
}
